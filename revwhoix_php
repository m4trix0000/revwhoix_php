!/usr/bin/php
<?php

// Verificar se estamos no modo CLI
if (php_sapi_name() !== 'cli') {
    echo "Este script deve ser executado na linha de comando.\n";
    exit(1);
}

// Função para pegar os parâmetros da linha de comando
function getCommandLineArgs() {
    global $argv, $argc;

    // Verifica se foi passado o parâmetro correto
    if ($argc < 3) {
        echo "Usage: php script.php <apiTokens> <include> [ignoreTerms]\n";
        exit(1);
    }

    // Extrai os apiTokens e o include
    $apiTokens = explode(",", $argv[1]); // Vários tokens separados por vírgula
    $include = $argv[2]; // Apenas um termo de busca permitido

    // Extrai os termos a serem ignorados (opcional)
    $ignoreTerms = array_slice($argv, 3);

    return [$apiTokens, $include, $ignoreTerms];
}

// Função para fazer a requisição HTTP usando cURL
function makePostRequest($url, $data, $apiToken) {
    $data['apiKey'] = $apiToken; // Inclui o token na requisição
    $ch = curl_init($url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_POST, true);
    curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data));
    curl_setopt($ch, CURLOPT_HTTPHEADER, array(
        'Content-Type: application/json',
        'Accept: application/json'
    ));
    $response = curl_exec($ch);
    curl_close($ch);
    return json_decode($response, true);
}

// Recebe os parâmetros da linha de comando
list($apiTokens, $include, $ignoreTerms) = getCommandLineArgs();

// Endpoint da API
$baseUrl = 'https://reverse-whois.whoisxmlapi.com/api/v2';

// Parâmetros de consulta para busca
$data = array(
    'searchType' => 'current',
    'mode' => 'purchase',
    'punycode' => true,
    'basicSearchTerms' => array(
        'include' => [$include]
    )
);

// Tenta cada apiToken até obter uma resposta válida
$response = null;
foreach ($apiTokens as $apiToken) {
    $response = makePostRequest($baseUrl, $data, $apiToken);
    if (isset($response['domainsList'])) {
        break; // Sai do loop se obtiver uma resposta válida
    }
}

// Exibir apenas os domínios que não contêm termos ignorados
if (isset($response['domainsList'])) {
    foreach ($response['domainsList'] as $domain) {
        $ignore = false;
        foreach ($ignoreTerms as $term) {
            if (stripos($domain, $term) !== false) {
                $ignore = true;
                break;
            }
        }
        if (!$ignore) {
            echo $domain . "\n";
        }
    }
} else {
    echo "Nenhum domínio encontrado na resposta.\n";
}

?>
